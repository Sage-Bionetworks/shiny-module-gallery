# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help

name: shiny-deploy

on:
  pull_request:
    branches:
      - main
      - staging
  push:
    branches:
      - main
      - staging


jobs:
  shiny-deploy:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.PAT }}
    steps:
      - name: Install libcurl
        run: sudo apt-get install -y libcurl4-openssl-dev

      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r@v1
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-renv@v2
        with:
          cache-version: 2

      - name: Install Miniconda and python packages
        run: |
          reticulate::install_miniconda()
          reticulate::py_discover_config()
          reticulate::py_install(c('pandas', 'numpy', 'boto3', 'synapseclient'), pip = TRUE)
        shell: Rscript {0}

            - name: Authorize and deploy app
        run: |
          branch   <- Sys.getenv("GITHUB_REF_NAME")
          print(branch)
          if (branch == "main"){
            app_name <- "Shiny-Module-Gallery"
          } else (branch == "staging"){
            app_name <- "Shiny-Module-Gallery-staging"
            #yaml::write_yaml(list("app" = 'staging'),  "app_config.yml")
          }
          print(app_name)
          rsconnect::setAccountInfo(
            name   = "sagebio"",
            token  = "${{ secrets.RSCONNECT_TOKEN }}",
            secret = "${{ secrets.RSCONNECT_SECRET }}"
          )
          rsconnect::setAccountInfo("${{ secrets.RSCONNECT_USER }}", "${{ secrets.RSCONNECT_TOKEN }}", "${{ secrets.RSCONNECT_SECRET }}")
          rsconnect::deployApp(appName = appName)
        shell: Rscript {0}
